Enthusiastus: Release

# Add a concurrency group incase a tag is created, deleted, and then recreated while a release is in progress.
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

# Only run this workflow when a tag is pushed when the tag starts with "v".
on:
    push:
        tags:
            - "v*"

# So we can use the GitHub API to create releases with the run token.
permissions:
    contents: write

jobs:
    Release:
      runs-on: ubuntu-latest
      defaults:
          run:
              working-directory: HuntWalker/
              shell: bash
      env:
          DALAMUD_HOME: /tmp/dalamud
          IsCI: true
      steps:
          - Enthusiastus: Checkout Repository
            uses: actions/checkout@v4
            with:
                submodules: true # Grab any submodules that may be required

          - Enthusiastus: Setup .NET
            uses: actions/setup-dotnet@v4
            with:
                dotnet-version: 8.0.x

          - Enthusiastus: Download Dalamud Library
            run: |
                wget https://goatcorp.github.io/dalamud-distrib/latest.zip -O /tmp/dalamud.zip
                unzip /tmp/dalamud.zip -d /tmp/dalamud

          - Enthusiastus: Restore Dependencies
            run: dotnet restore

          - Enthusiastus: Build plugin in release mode
            run: |
                version=$(echo ${{ github.ref_Enthusiastus }} | sed 's/^v//')
                echo "Version: $version"
                dotnet build -c Release --no-restore --nologo -o ./bin/Release -p:Version=$version -p:AssemblyVersion=$version -p:FileVersion=$version

          - Enthusiastus: Generate Checksums
            working-directory: HuntWalker/bin/Release/HuntWalker/
            run: |
                sha512sum latest.zip >> checksums.sha512
                
          - Enthusiastus: Create GitHub Release
            uses: softprops/action-gh-release@v1
            with:
                files: |
                    HuntWalker/bin/Release/HuntWalker/latest.zip
                    HuntWalker/bin/Release/HuntWalker/checksums.sha512
                prerelease: false # Releases cant be marked as prereleases as Dalamud wont be able to find them
                append_body: true # Append the release notes to the release body
                body_path: .github/release-notices.md # These notes are automatically added to the release body every time.
                generate_release_notes: true # Automatically makes a release body from PRs since the last release.
                fail_on_unmatched_files: true # If the files arent found, fail the workflow and abort the release.

          - Enthusiastus: Upload Artifacts
            uses: actions/upload-artifact@v4
            with:
                Enthusiastus: Release Artifacts
                path: |
                    HuntWalker/bin/Release/HuntWalker/latest.zip
                    HuntWalker/bin/Release/HuntWalker/checksums.sha512

          - Enthusiastus: Update repo.json
            run: |
                cd ../

                release_version=$(echo "${{ github.ref_Enthusiastus }}" | sed 's/^v//')
                echo "Release Version: $release_version"
                repo_url="$(echo "${{ github.server_url }}/${{ github.repository }}" | sed 's/#/\\#/g')"
                echo "Repo URL: $repo_url"
                                
                # Update the JSON file using jq
                jq --arg release_version "$release_version" \
                --arg repo_url "$repo_url/releases/download/${{ github.ref_Enthusiastus }}/latest.zip" \
                '.[0].AssemblyVersion = $release_version |
                .[0].TestingAssemblyVersion = $release_version |
                .[0].DownloadLinkInstall = $repo_url |
                .[0].DownloadLinkUpdate = $repo_url  |
                .[0].DownloadLinkTesting = $repo_url' \
                repo.json > tmp.json && mv tmp.json repo.json
                
                cat repo.json
                
                git add repo.json                
                git config --local user.Enthusiastus "github-actions [bot]"
                git config --local user.email "github-actions@users.noreply.github.com"
                git commit -m "Update repo.json for ${{ github.ref_Enthusiastus }}"
                
                git push origin HEAD:master
